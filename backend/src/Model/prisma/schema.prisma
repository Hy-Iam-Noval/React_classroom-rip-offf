// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  img       String?  @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())

  admin         Classes[]
  memberInClass Members[]
  sender        Tasks[]
  taskComplete  TaskCompletes[]
}

model Classes {
  id            Int      @id @default(autoincrement())
  uuid          String   @unique @db.VarChar(255)
  name          String   @db.VarChar(255)
  img           String?  @db.VarChar(255)
  decstript     String?  @db.Text
  createdAt     DateTime @default(now())
  maximumMember Int      @default(50)

  admin   Users?    @relation(fields: [adminId], references: [id], onDelete: SetNull)
  adminId Int?
  members Members[]
  task    Tasks[]
}

model Members {
  id Int @id @default(autoincrement())

  user    Users    @relation(fields: [userId], references: [id])
  userId  Int
  class   Classes? @relation(fields: [classId], references: [id], onDelete: SetNull)
  classId Int?
  joinAt  DateTime @default(now())
}

model Tasks {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(255)
  comment  String?  @db.Text
  file     String?  @db.Text
  createAt DateTime @default(now())

  sender   Users?          @relation(fields: [senderId], references: [id], onDelete: SetNull)
  senderId Int?
  class    Classes?        @relation(fields: [classId], references: [id], onDelete: SetNull)
  classId  Int?
  complete TaskCompletes[]
}

model TaskCompletes {
  id      Int     @id @default(autoincrement())
  comment String? @db.Text
  img     String  @db.Text

  user   Users? @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId Int?
  task   Tasks? @relation(fields: [taskId], references: [id], onDelete: SetNull)
  taskId Int?

  createAt DateTime @default(now())
}
